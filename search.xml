<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>进程、线程基础知识</title>
      <link href="/2024/04/30/jinchengxianchengjichu/"/>
      <url>/2024/04/30/jinchengxianchengjichu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-进程、线程基础知识"><a href="#1-进程、线程基础知识" class="headerlink" title="1.进程、线程基础知识"></a>1.进程、线程基础知识</h1><table><tr><td bgcolor=#FFFFCD>先来看看一则小故事</td></tr></table><p>我们写好的一行行代码，为了让其工作起来，我们还得把它送进城（<font color=#4169E1>进程</font>）里，那既然进了城里，那肯定不能胡作非为了。</p><p>城里人有城里人的规矩，城中有个专门管辖你们的城管（<font color=#4169E1>操作系统</font>），人家让你休息就休息，让你工作就工作，毕竟摊位不多，每个人都要占这个摊位来工作，城里要工作的人多着去了。</p><p>所以城管为了公平起见，它使用一种策略（<font color=#4169E1>调度</font>）方式，给每个人一个固定的工作时间（<font color=#4169E1>时间片</font>），时间到了就会通知你去休息而换另外一个人上场工作。</p><p>另外，在休息时候你也不能偷懒，要记住工作到哪了，不然下次到你工作了，你忘记工作到哪了，那还怎么继续？</p><p>有的人，可能还进入了县城（<font color=#4169E1>线程</font>）工作，这里相对轻松一些，在休息的时候，要记住的东西相对较少，而且还能共享城里的资源。</p><table><tr><td bgcolor=#FFFFCD>“哎哟，难道本文内容是进程和线程？”</td></tr></table><p>“哎哟，难道本文内容是进程和线程？”</p><p>可以，聪明的你猜出来了，也不枉费我瞎编乱造的故事了。</p><img src="/image/kc.webp" alt="开车" width="300" height="300"><p>进程和线程对于写代码的我们，真的天天见、日日见了，但见的多不代表你就熟悉它们，比如简单问你一句，你知道它们的工作原理和区别吗？</p><p>不知道没关系，今天就要跟大家讨论<font color=#4169E1>操作系统的进程和线程</font>。</p><p><img src="/image/tigang.webp" alt="这是图片" title="提纲"></p><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><p>我们编写的代码只是一个存储在硬盘的静态文件，通过编译后就会生成二进制可执行文件，当我们运行这个可执行文件后，它会被装载到内存中，接着 CPU 会执行程序中的每一条指令，那么这个<font color=#4169E1>运行中的程序，就被称为「进程」（Process）</font>。</p><p>现在我们考虑有一个会读取硬盘文件数据的程序被执行了，那么当运行到读取文件的指令时，就会去从硬盘读取数据，但是硬盘的读写速度是非常慢的，那么在这个时候，如果 CPU 傻傻的等硬盘返回数据的话，那 CPU 的利用率是非常低的。</p><p>做个类比，你去煮开水时，你会傻傻的等水壶烧开吗？很明显，小孩也不会傻等。我们可以在水壶烧开之前去做其他事情。当水壶烧开了，我们自然就会听到“嘀嘀嘀”的声音，于是再把烧开的水倒入到水杯里就好了。</p><p>所以，当进程要从硬盘读取数据时，CPU 不需要阻塞等待数据的返回，而是去执行另外的进程。当硬盘数据返回时，CPU 会收到个中断，于是 CPU 再继续运行这个进程。</p><p><img src="/image/jcjtyx.webp" alt="这是图片" title="进程与线程交替"></p><p>这种<font color=#4169E1>多个程序、交替执行</font>的思想，就有 CPU 管理多个进程的初步想法。</p><p>对于一个支持多进程的系统，CPU 会从一个进程快速切换至另一个进程，其间每个进程各运行几十或几百个毫秒。</p><p>虽然单核的 CPU 在某一个瞬间，只能运行一个进程。但在 1 秒钟期间，它可能会运行多个进程，这样就产生<font color=#4169E1>并行的错觉</font>，实际上这是<font color=#4169E1>并发</font>。<br>并发和并行有什么区别？</p><table><tr><td bgcolor=#FFFFCD>一图胜千言</td></tr></table># 图片<table><tr><td bgcolor=#FFFFCD>进程与程序的关系的类比</td></tr></table><p>到了晚饭时间，一对小情侣肚子都咕咕叫了，于是男生见机行事，就想给女生做晚饭，所以他就在网上找了辣子鸡的菜谱，接着买了一些鸡肉、辣椒、香料等材料，然后边看边学边做这道菜。<br><img src="/image/zc.webp" alt="这是图片" title="做菜"></p><p>突然，女生说她想喝可乐，那么男生只好把做菜的事情暂停一下，并在手机菜谱标记做到哪一个步骤，把状态信息记录了下来。</p><p>然后男生听从女生的指令，跑去下楼买了一瓶冰可乐后，又回到厨房继续做菜。</p><p>这体现了，CPU 可以从一个进程（做菜）切换到另外一个进程（买可乐），在切换前必须要记录当前进程中运行的状态信息，以备下次切换回来的时候可以恢复执行。</p><p>所以，可以发现进程有着<font color=#4169E1>「运行 - 暂停 - 运行」</font>的活动规律</p>]]></content>
      
      
      
        <tags>
            
            <tag> 操作系统，学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/04/30/test/"/>
      <url>/2024/04/30/test/</url>
      
        <content type="html"><![CDATA[<h2 id="1-操作系统的基本概念"><a href="#1-操作系统的基本概念" class="headerlink" title="1.操作系统的基本概念"></a>1.操作系统的基本概念</h2><h3 id="1-1-熟悉的操作系统举例"><a href="#1-1-熟悉的操作系统举例" class="headerlink" title="1.1 熟悉的操作系统举例"></a>1.1 熟悉的操作系统举例</h3><p>无序列表:</p><ul><li>列表内容, </li><li>列表内容, </li><li>列表内容,</li></ul><p><code>高亮</code>文字</p><table><tr><td bgcolor=DarkSeaGreen>这里的背景色是：DarkSeaGreen，此处输入任意想输入的内容</td></tr></table><p>cornsilk</p><table><tr><td bgcolor=#FFF8DC>背景色orange</td></tr></table><p>白杏仁</p><table><tr><td bgcolor=#FFFFCD>背景色orange</td></tr></table><p>淡黄色</p><table><tr><td bgcolor=#F5DEB3>背景色orange</td></tr></table><p><img src="/image/kc.webp" alt="这是图片" title="Magic Gardens"></p><img src="/image/kc.webp" alt="开车" width="300" height="300">]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/29/hello-world/"/>
      <url>/2024/04/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello World</p>]]></content>
      
      
      
        <tags>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
